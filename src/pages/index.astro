---
import HeaderAndFooter from "../components/HeaderAndFooter/index.astro";
import HomePageSection from "../components/HomePageSection.astro";
import Spline from "../components/Spline.astro";
//@ts-ignore
import { Img } from "astro-imagetools/components";

const { message } = Astro.props;

const markupData = [
  // {
  //   imageUrl: "/images/macbook3.jpeg",
  //   links: [],
  // },
  {
    text: [
      "I am a graduate student studying Computer Science at the Georgia Institute of Technology, concentrating in Machine Learning.",
    ],
    imageUrl: "/images/bg/crosland.jpg",
    links: [],
  },
  {
    text: [
      "Ultimately, I am an exuberant software engineer at heart, and a problem-solver at my core,",
    ],
    imageUrl: "/images/bg/macCode.jpg",
    links: [
      {
        href: "/projects",
        label: "Projects",
      },
      {
        href: "/github",
        label: "GitHub",
        target: "_blank",
        nofollow: true,
      },
    ],
  },
  {
    text: ["With a sense of photographic expression put on full display."],
    imageUrl: "/images/portfolio/Manhattan_Bridge.jpg",
    links: [
      {
        href: "/photo",
        label: "Gallery",
      },
      {
        href: "/photo?map=true",
        label: "Capture Map",
        nofollow: true,
      },
      // {
      //   href: "/photo/gear",
      //   label: "Gear",
      // },
    ],
  },
  {
    text: ["I encourage you to learn about my various ventures, old and new,"],
    imageUrl: "/images/bg/mandel.png",
    links: [
      { href: "/blog", label: "Blog", target: "_blank", nofollow: true },
      {
        href: "/twitter",
        label: "Twitter",
        target: "_blank",
        nofollow: true,
      },
    ],
  },
  {
    text: [
      "Reach out with professional inquiries surrounding new opportunities,",
    ],
    imageUrl: "/images/bg/startup.jpg",
    links: [
      {
        href: "/linkedin",
        label: "LinkedIn",
        target: "_blank",
        nofollow: true,
      },
      {
        href: "/resume",
        label: "Résumé",
        target: "_blank",
        nofollow: true,
      },
    ],
  },
  {
    text: ["Or connect with me further through my online presence."],
    imageUrl: "/images/bg/connect.jpg",
    links: [
      {
        href: "mailto:blake@sanie.com",
        label: "Email",
        class: "email",
        nofollow: true,
      },
      {
        href: "/contact.vcf",
        label: "Contact Card",
        class: "email",
      },
      {
        href: "/instagram",
        label: "Instagram",
        target: "_blank",
        nofollow: true,
      },
      {
        href: "/strava",
        label: "Strava",
        target: "_blank",
        nofollow: true,
      },
    ],
  },
];
---

<HeaderAndFooter color="rgba(0,0,0,0.8)" title="Home" themeColor="black">
  <HomePageSection id="firstSection" class="homePageSection">
    <!-- <canvas id="canvas3d"></canvas> -->
    <!-- <iframe id="canvas3d" src="/hero/index.html"></iframe> -->
    <Spline />
    <div id="wwdc">
      <!-- <img src="/images/wwdc_blake.png" /> -->
      <Img
        src="/src/assets/images/wwdc_blake.png"
        alt="Blake in WWDC style"
        breakpoints={[200]}
        quality={20}
        format="webp"
        layout="fullWidth"
        loading="lazy"
        placeholder="blur"
      />
    </div>
    <h1><span id="typed">Hi, I'm Blake.</span></h1>
    <!-- <script
      type="module"
      src="https://unpkg.com/@splinetool/viewer@0.9.261/build/spline-viewer.js"
    ></script>
    <spline-viewer
      id="spline-viewer"
      url="https://prod.spline.design/KDmGPoqNmLmqK9H2/scene.splinecode"
    ></spline-viewer> -->
    <!-- <div class="nameZone fullCenter">
      <div id="wwdc">
        <img src="/images/wwdc_blake.png" />
      </div>
      <h1 class="typed">
        <span id="typed"> Hi, I'm Blake.</span>
      </h1>
    </div>
    <img id="mainMac" src="/images/bg/macbook.jpg" />
    <Particles id="particles-js" /> -->
  </HomePageSection>
  {
    markupData.map((data, i) => (
      <HomePageSection
        imageUrl={"/src/assets" + data.imageUrl}
        text={data.text}
        links={data.links}
        class="homePageSection sectionTransitionParent"
      />
    ))
  }
</HeaderAndFooter>

<!-- <script>
  // import { Application } from "@splinetool/runtime";
  import { Application } from "../../public/hero/runtime.js";
  const canvas = document.getElementById("canvas3d");
  const app = new Application(canvas);
  // spline.load("https://prod.spline.design/KDmGPoqNmLmqK9H2/scene.splinecode");
  app.load("/hero/scene.splinecode");
</script> -->

{
  message && (
    <Fragment
      set:html={`<script>setTimeout(function(){history.pushState({}, null, '/');alert("${message}");}, 200)</script>`}
    />
  )
}

<script>
  // document.getElementById("canvas3d").onload = function () {
  //   alert("myframe is loaded");
  // };
  import Typed from "typed.js";
  setTimeout(() => {
    let typed = new Typed("#typed", {
      strings: ["Hi, I'm Blake", ""],
      typeSpeed: 50,
      backSpeed: 40,
      loop: false,
      // loopCount: 1,
      onComplete: () => {
        typed.destroy();
        typed = new Typed("#typed", {
          strings: [
            "^500 Scroll to learn more... ^1000",
            "^500 Hi, ^500I'm Blake. ^2000",
          ],
          typeSpeed: 50,
          backSpeed: 40,
          loop: true,
          smartBackspace: true,
        });
      },
    });
  }, 4000);

  const sections = document.querySelectorAll(".sectionTransitionParent");

  // const onScreen: Set<Element> = new Set();

  // const observer = new IntersectionObserver(
  //   (entries) => {
  //     for (const entry of entries) {
  //       const intersecting = entry.isIntersecting;
  //       // console.log(entry.target, "intersecting", intersecting);
  //       if (intersecting) {
  //         onScreen.add(entry.target);
  //       } else {
  //         onScreen.delete(entry.target);
  //       }
  //     }
  //   },
  //   {
  //     rootMargin: "200px",
  //   }
  // );

  // for (let i = 0; i < sections.length; i++) {
  //   const section = sections[i];
  //   observer.observe(section);
  // }

  window.addEventListener("scroll", (e) => {
    // console.log(
    //   "onscreen",
    //   Array.from(onScreen).map((element: Element) =>
    //     element.querySelector("h2")?.textContent?.substring(0, 10)
    //   )
    // );
    const screenCenter = window.scrollY + window.innerHeight / 2;
    sections.forEach((section) => {
      if (!(section instanceof HTMLElement)) {
        return;
      }
      const sectionCenter = section.offsetTop + section.offsetHeight / 2;
      const diff = (sectionCenter - screenCenter) / section.offsetHeight;
      const bg = section.querySelector(".bg");
      if (!(bg instanceof HTMLElement)) {
        return;
      }
      // bg.style.transform = `translateY(${-diff * 100}px)`;
      // bg.style.opacity = `${0.2 + 0.6 * Math.max(0, 1 - Math.abs(diff) * 1)}`;
      const children = section.childNodes;
      for (let i = 0; i < children.length; i++) {
        const child = children[i];
        if (!(child instanceof HTMLElement)) {
          continue;
        }
        if (!child.classList.contains("bg")) {
          const rate = window.innerHeight * 0.1;
          child.style.transform = `translateY(${diff * rate}px)`;
        } else {
          // child.style.transform = `translateY(${diff * 300}px)`;
        }
      }
    });
  });
</script>

<style>
  html {
    color-scheme: only dark;
    background-color: black;
  }
  :global(.navChip) {
    background: rgb(0, 126, 204, 0.8);
  }
  :global(.navChipNested) {
    display: none;
  }
  body {
    color: white;
  }
  .homePageSection {
    max-height: min(1000px, 170vw);
  }
  #firstSection > *:not(#spline) {
    pointer-events: none;
    z-index: 1;
  }
  .nameZone {
    padding: 2em;
    border: 1px solid green;
  }
  #wwdc {
    width: 9em;
    padding: 0.5em;
    /* background: radial-gradient(
      closest-side at 4.5em 5em,
      rgba(255, 123, 0, 0.344) 0%,
      transparent 100%
    ); */
    overflow: visible;
    /* z-index: 9; */
    /* animation: fadeIn 6s ease-in; */
  }
  #wwdc img {
    width: 100%;
  }
  h1 {
    /* animation: fadeIn 3s ease-in; */
    /* z-index: 9; */
    font-size: 3.4em;
    /* mix-blend-mode: soft-light; */
    opacity: 1;
    padding: 0 1em;
    height: 1.4em;
    text-align: center;
    /* pointer-events: none; */
    /* filter: contrast(4); */
    /* backdrop-filter: contrast(4); */
    /* clip-path: ; */
    /* margin-top: 0.5em; */
  }
  .fullCenter {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  #mainMac {
    flex: 1;
    width: 100%;
    object-fit: cover;
    border: 1px solid yellow;
  }
  :global(#particles-js) {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* z-index: -1; */
  }
  :global(#canvas3d) {
    position: absolute;
    width: 100%;
    min-width: 100vh;
    height: 100%;
    border: none;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  @media screen and (max-width: 800px) {
    #firstSection {
      height: calc(100vh - 80px);
      height: calc(100svh - 80px);
    }
  }

  @media screen and (max-width: 600px) {
    :global(main) {
      font-size: calc(0.4em + 1.6vmin);
    }
    .homePageSection :global(h2) {
      padding: 0 1em;
    }
    .homePageSection :global(a) {
      font-size: 1.6em;
    }
  }
</style>
